flask
google-generativeai
python-dotenv

### For running the app
# 1. Build a environment with the following steps:
#    Create a virtual environment:
#    ```
#    python -m venv myenv
#    ```
#    or 
#    ```
#    python3 -m venv myenv
#    ```
#    depending on your Python version.
#    This will create a directory named `myenv` in your project folder.
#    Make sure to run this command in the root directory of your project.
#    If you are using a different Python version, replace `python` with the
#    appropriate command (e.g., `python3`).

# 2. Activate the virtual environment:
#    - On Windows:
#      ```
#      venv\Scripts\activate
#      ```
#    - On macOS/Linux: 
#      ```
#      source venv/bin/activate
#      ```
#    This will activate the virtual environment, and you should see `(venv)`
#    at the beginning of your terminal prompt.

# 3. Install the required packages:
#    ```
#    pip install -r requirements.txt
#    ```
#    This will install Flask, the Google Generative AI library, and python-dotenv
#    in your virtual environment.

# 4. Set up your Google Generative AI API key:
#    - Create a `.env` file in the root directory of your project.
#    - Add the following line to the `.env` file:
#      ```
#      GOOGLE_API_KEY=your_api_key_here
#      ```
#    Replace `your_api_key_here` with your actual Google Generative AI API key.

# 5. Run the Flask app:
#    ```
#     python app.py
#     ```
#    or
#    ```
#     python3 app.py
#    ```
#    This will start the Flask development server on `localhost:5000`.
#    You should see output indicating that the server is running.
#    If you are using a different Python version, replace `python` with the
#    appropriate command (e.g., `python3`).
#    If you encounter an error about the port being in use, you can specify a
#    different port by running:
#    ```
#    python app.py --port 5001
#    ```
#    or
#    ```
#    python3 app.py --port 5001
#    ```
#    This will run the app on port 5001 instead of the default port 5000.

# 6. Access the app:
#    Open your web browser and go to `http://localhost:5000` (or the port you specified).
#    You should see the Flask app running, and you can interact with it as intended.

# 7. To stop the Flask app, you can press `Ctrl+C` in the terminal where the app is running.
#    This will terminate the Flask development server.

# 8. Deactivate the virtual environment when done:
#    ```
#    deactivate
#    ```
#    This will return you to your system's default Python environment.
#    You can reactivate the virtual environment later by running the activation command again.

